# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: [ "master" ]
#   pull_request:
#     branches: [ "master" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
    - name: make application.yml
      run: |
        # create application.yml
        cd ./src/main
        mkdir resources
        cd ./resources
        
        touch ./application.yml
        echo "${{ secrets.DATABASE }}" >> ./application.yml
      shell: bash
      
      
    - name: Build with Gradle
      run: ./gradlew bootJar
      
    - name: web docker build and push
      run: |
        docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
        docker build -t ${{ secrets.DOCKER_REPO }} .
        docker push ${{ secrets.DOCKER_REPO }}
    - name: executing remote ssh commands using password
      uses: appleboy/ssh-action@v0.1.6
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.EC2_USERNAME }}
        key: ${{ secrets.KEY }}
        port: 22
        script: |
          sudo docker stop prod-server
          sudo docker rm prod-server
          sudo docker image rm ${{ secrets.DOCKER_REPO }}
          sudo docker pull ${{ secrets.DOCKER_REPO }}
          sudo docker run -d -p 80:8080 ${{ secrets.DOCKER_REPO }}
